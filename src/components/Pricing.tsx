import React from 'react';
import {
  Box,
  Container,
  Typography,
  Card,
  CardContent,
  Button,
  Chip,
} from '@mui/material';
import {
  MenuBook,
  Science,
  Code,
  Assessment,
  CheckCircle,
  Telegram,
} from '@mui/icons-material';
import { motion } from 'framer-motion';

const Pricing: React.FC = () => {
  const pricingPlans = [
    {
      icon: <MenuBook />,
      title: '–ö—É—Ä—Å–æ–≤–∞ —Ä–æ–±–æ—Ç–∞',
      basePrice: 1500,
      priceUnit: '+ 50 –≥—Ä–Ω/—Å—Ç–æ—Ä—ñ–Ω–∫–∞',
      description: '–ü—Ä–æ—Ñ–µ—Å—ñ–π–Ω–µ –Ω–∞–ø–∏—Å–∞–Ω–Ω—è –∫—É—Ä—Å–æ–≤–∏—Ö —Ä–æ–±—ñ—Ç –∑ –±—É–¥—å-—è–∫–∏—Ö –¥–∏—Å—Ü–∏–ø–ª—ñ–Ω',
      features: [
        '–£–Ω—ñ–∫–∞–ª—å–Ω—ñ—Å—Ç—å 100%',
        '–ë–µ–∑–∫–æ—à—Ç–æ–≤–Ω—ñ –ø—Ä–∞–≤–∫–∏',
        '–¢–µ—Ä–º—ñ–Ω 7-14 –¥–Ω—ñ–≤',
        '–°–ø–∏—Å–æ–∫ –ª—ñ—Ç–µ—Ä–∞—Ç—É—Ä–∏',
        '–ü–ª–∞–≥—ñ–∞—Ç-–ø–µ—Ä–µ–≤—ñ—Ä–∫–∞',
      ],
      popular: true,
    },
    {
      icon: <Science />,
      title: '–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞ —Ä–æ–±–æ—Ç–∞',
      basePrice: 300,
      priceUnit: '+ 100 –≥—Ä–Ω/—Ä–æ–±–æ—Ç–∞',
      description: '–í–∏–∫–æ–Ω–∞–Ω–Ω—è –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∏—Ö —Ä–æ–±—ñ—Ç –∑ —Ç–æ—á–Ω–∏—Ö –Ω–∞—É–∫',
      features: [
        '–î–µ—Ç–∞–ª—å–Ω—ñ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫–∏',
        '–ì—Ä–∞—Ñ—ñ–∫–∏ —Ç–∞ —Å—Ö–µ–º–∏',
        '–®–≤–∏–¥–∫–µ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è',
        '–ü–æ—è—Å–Ω–µ–Ω–Ω—è —Ö–æ–¥—É —Ä–æ–±–æ—Ç–∏',
        '–í–∏—Å–Ω–æ–≤–∫–∏',
      ],
      popular: false,
    },
    {
      icon: <Assessment />,
      title: '–†–µ—Ñ–µ—Ä–∞—Ç',
      basePrice: 500,
      priceUnit: '+ 30 –≥—Ä–Ω/—Å—Ç–æ—Ä—ñ–Ω–∫–∞',
      description: '–Ø–∫—ñ—Å–Ω–æ –Ω–∞–ø–∏—Å–∞–Ω—ñ —Ä–µ—Ñ–µ—Ä–∞—Ç–∏ –∑ —Ä—ñ–∑–Ω–∏—Ö –¥–∏—Å—Ü–∏–ø–ª—ñ–Ω',
      features: [
        '–£–Ω—ñ–∫–∞–ª—å–Ω–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç',
        '–°–ø–∏—Å–æ–∫ –ª—ñ—Ç–µ—Ä–∞—Ç—É—Ä–∏',
        '–û—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –∑–∞ –î–°–¢–£',
        '–®–≤–∏–¥–∫–µ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è',
        '–ë–µ–∑–∫–æ—à—Ç–æ–≤–Ω—ñ –ø—Ä–∞–≤–∫–∏',
      ],
      popular: false,
    },
    {
      icon: <Code />,
      title: '–ö–æ–Ω—Ç—Ä–æ–ª—å–Ω–∞ —Ä–æ–±–æ—Ç–∞',
      basePrice: 400,
      priceUnit: '+ 80 –≥—Ä–Ω/—Ä–æ–±–æ—Ç–∞',
      description: '–í–∏–∫–æ–Ω–∞–Ω–Ω—è –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–∏—Ö —Ä–æ–±—ñ—Ç –∑ —Ä—ñ–∑–Ω–∏—Ö –ø—Ä–µ–¥–º–µ—Ç—ñ–≤',
      features: [
        '–î–µ—Ç–∞–ª—å–Ω—ñ —Ä—ñ—à–µ–Ω–Ω—è',
        '–ü–æ—è—Å–Ω–µ–Ω–Ω—è —Ö–æ–¥—É',
        '–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤',
        '–®–≤–∏–¥–∫–µ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è',
        '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—ó',
      ],
      popular: false,
    },
    {
      icon: <Assessment />,
      title: '–Ü–Ω—à–µ',
      basePrice: 200,
      priceUnit: '+ 40 –≥—Ä–Ω/—Å—Ç–æ—Ä—ñ–Ω–∫–∞',
      description: '–Ü–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è —Ç–∞ –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ñ —Ä–æ–±–æ—Ç–∏',
      features: [
        '–Ü–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–∏–π –ø—ñ–¥—Ö—ñ–¥',
        '–û–±–≥–æ–≤–æ—Ä–µ–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π',
        '–ì–Ω—É—á–∫—ñ —Ç–µ—Ä–º—ñ–Ω–∏',
        '–£–Ω—ñ–∫–∞–ª—å–Ω–µ —Ä—ñ—à–µ–Ω–Ω—è',
        '–ü–æ–≤–Ω–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞',
      ],
      popular: false,
    },
  ];

  return (
    <Box
      id="pricing"
      sx={{
        py: 10,
        background: 'linear-gradient(180deg, #1e293b 0%, #0f172a 100%)',
      }}
    >
      <Container maxWidth="lg">
        <motion.div
          initial={{ opacity: 0, y: 50 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}
          viewport={{ once: true }}
        >
          <Box sx={{ textAlign: 'center', mb: 8 }}>
            <Typography
              variant="h2"
              sx={{
                mb: 3,
                background: 'linear-gradient(45deg, #3b82f6 30%, #8b5cf6 90%)',
                backgroundClip: 'text',
                WebkitBackgroundClip: 'text',
                WebkitTextFillColor: 'transparent',
                fontWeight: 700,
              }}
            >
              –ü—Ä–æ–∑–æ—Ä—ñ —Ü—ñ–Ω–∏
            </Typography>
            <Typography
              variant="h5"
              sx={{
                color: 'text.secondary',
                maxWidth: 700,
                mx: 'auto',
                lineHeight: 1.6,
                mb: 2,
              }}
            >
              –ë–∞–∑–æ–≤—ñ —Ä–æ–∑—Ü—ñ–Ω–∫–∏ –Ω–∞ –Ω–∞—à—ñ –ø–æ—Å–ª—É–≥–∏. –§—ñ–Ω–∞–ª—å–Ω–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å –∑–∞–ª–µ–∂–∏—Ç—å –≤—ñ–¥ —Å–∫–ª–∞–¥–Ω–æ—Å—Ç—ñ —Ç–∞ —Ç–µ—Ä–º—ñ–Ω—ñ–≤ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è.
            </Typography>
            <Chip
              label="üí∞ –ë–µ–∑ –ø—Ä–∏—Ö–æ–≤–∞–Ω–∏—Ö –ø–ª–∞—Ç–µ–∂—ñ–≤"
              sx={{
                background: 'linear-gradient(45deg, #10b981 30%, #059669 90%)',
                color: 'white',
                fontWeight: 600,
              }}
            />
          </Box>
        </motion.div>

        <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', md: 'repeat(2, 1fr)', lg: 'repeat(3, 1fr)' }, gap: 4 }}>
          {pricingPlans.map((plan, index) => (
            <motion.div
              key={index}
              initial={{ opacity: 0, y: 50 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.6, delay: index * 0.1 }}
              viewport={{ once: true }}
            >
              <Card
                sx={{
                  background: plan.popular 
                    ? 'linear-gradient(135deg, rgba(59, 130, 246, 0.1) 0%, rgba(139, 92, 246, 0.1) 100%)'
                    : 'rgba(30, 41, 59, 0.5)',
                  backdropFilter: 'blur(10px)',
                  border: plan.popular 
                    ? '2px solid rgba(59, 130, 246, 0.3)'
                    : '1px solid rgba(255, 255, 255, 0.1)',
                  height: '100%',
                  transition: 'all 0.3s ease-in-out',
                  position: 'relative',
                  '&:hover': {
                    transform: 'translateY(-10px)',
                    boxShadow: plan.popular 
                      ? '0 25px 50px rgba(59, 130, 246, 0.2)'
                      : '0 25px 50px rgba(0, 0, 0, 0.3)',
                  },
                }}
              >
                {plan.popular && (
                  <Chip
                    label="‚≠ê –ü–æ–ø—É–ª—è—Ä–Ω–æ"
                    sx={{
                      position: 'absolute',
                      top: -12,
                      left: '50%',
                      transform: 'translateX(-50%)',
                      background: 'linear-gradient(45deg, #3b82f6 30%, #8b5cf6 90%)',
                      color: 'white',
                      fontWeight: 600,
                      fontSize: '0.875rem',
                      px: 2,
                      py: 1,
                    }}
                  />
                )}
                
                <CardContent sx={{ p: 4, height: '100%', display: 'flex', flexDirection: 'column' }}>
                  <Box
                    sx={{
                      color: '#3b82f6',
                      mb: 2,
                      '& svg': { fontSize: '2.5rem' },
                      textAlign: 'center',
                    }}
                  >
                    {plan.icon}
                  </Box>
                  
                  <Typography
                    variant="h5"
                    sx={{
                      mb: 2,
                      fontWeight: 600,
                      color: 'text.primary',
                      textAlign: 'center',
                    }}
                  >
                    {plan.title}
                  </Typography>
                  
                  <Box sx={{ textAlign: 'center', mb: 3 }}>
                    <Typography
                      variant="h4"
                      sx={{
                        fontWeight: 700,
                        color: '#3b82f6',
                        mb: 1,
                      }}
                    >
                      {plan.basePrice} ‚Ç¥
                    </Typography>
                    <Typography
                      variant="body2"
                      sx={{
                        color: 'text.secondary',
                        fontWeight: 500,
                      }}
                    >
                      {plan.priceUnit}
                    </Typography>
                  </Box>
                  
                  <Typography
                    variant="body1"
                    sx={{
                      mb: 3,
                      color: 'text.secondary',
                      textAlign: 'center',
                      lineHeight: 1.6,
                    }}
                  >
                    {plan.description}
                  </Typography>
                  
                  <Box sx={{ mb: 4, flexGrow: 1 }}>
                    {plan.features.map((feature, featureIndex) => (
                      <Box
                        key={featureIndex}
                        sx={{
                          display: 'flex',
                          alignItems: 'center',
                          mb: 2,
                          color: 'text.secondary',
                        }}
                      >
                        <CheckCircle
                          sx={{
                            color: '#10b981',
                            mr: 2,
                            fontSize: '1.25rem',
                          }}
                        />
                        <Typography variant="body2">
                          {feature}
                        </Typography>
                      </Box>
                    ))}
                  </Box>
                  
                  <Button
                    variant={plan.popular ? 'contained' : 'outlined'}
                    fullWidth
                    size="large"
                    startIcon={<Telegram />}
                    href="https://t.me/Easy_Kyrsach_bot"
                    target="_blank"
                    sx={{
                      mt: 'auto',
                      py: 2,
                      ...(plan.popular ? {
                        background: 'linear-gradient(45deg, #3b82f6 30%, #8b5cf6 90%)',
                        '&:hover': {
                          background: 'linear-gradient(45deg, #1d4ed8 30%, #7c3aed 90%)',
                          transform: 'translateY(-2px)',
                        },
                      } : {
                        borderColor: '#3b82f6',
                        color: '#3b82f6',
                        '&:hover': {
                          borderColor: '#1d4ed8',
                          background: 'rgba(59, 130, 246, 0.1)',
                        },
                      }),
                      transition: 'all 0.3s ease-in-out',
                    }}
                  >
                    –ó–∞–º–æ–≤–∏—Ç–∏ –∑–∞—Ä–∞–∑
                  </Button>
                </CardContent>
              </Card>
            </motion.div>
          ))}
        </Box>

        <motion.div
          initial={{ opacity: 0, y: 50 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8, delay: 0.6 }}
          viewport={{ once: true }}
        >
          <Box
            sx={{
              mt: 8,
              p: 6,
              background: 'linear-gradient(135deg, rgba(16, 185, 129, 0.1) 0%, rgba(5, 150, 105, 0.1) 100%)',
              borderRadius: 3,
              border: '1px solid rgba(16, 185, 129, 0.2)',
              textAlign: 'center',
            }}
          >
            <Typography
              variant="h4"
              sx={{
                mb: 3,
                fontWeight: 600,
                color: 'text.primary',
              }}
            >
              üí° –í–∞–∂–ª–∏–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
            </Typography>
            <Typography
              variant="body1"
              sx={{
                color: 'text.secondary',
                lineHeight: 1.8,
                maxWidth: 800,
                mx: 'auto',
                mb: 4,
              }}
            >
              –¶–µ –æ—Ä—ñ—î–Ω—Ç–æ–≤–Ω—ñ —Ü—ñ–Ω–∏. –§—ñ–Ω–∞–ª—å–Ω–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å –∑–∞–ª–µ–∂–∏—Ç—å –≤—ñ–¥ —Å–∫–ª–∞–¥–Ω–æ—Å—Ç—ñ, —Ç–µ—Ä–º—ñ–Ω—ñ–≤ —Ç–∞ –æ—Å–æ–±–ª–∏–≤–∏—Ö –≤–∏–º–æ–≥. 
              –î–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–æ—á–Ω–æ—ó –≤–∞—Ä—Ç–æ—Å—Ç—ñ - –Ω–∞–ø–∏—à—ñ—Ç—å –Ω–∞–º –≤ –±–æ—Ç—ñ –∑ –æ–ø–∏—Å–æ–º –≤–∞—à–æ–≥–æ –∑–∞–≤–¥–∞–Ω–Ω—è.
            </Typography>
            <Button
              variant="contained"
              size="large"
              startIcon={<Telegram />}
              href="https://t.me/Easy_Kyrsach_bot"
              target="_blank"
              sx={{
                background: 'linear-gradient(45deg, #10b981 30%, #059669 90%)',
                '&:hover': {
                  background: 'linear-gradient(45deg, #047857 30%, #065f46 90%)',
                  transform: 'translateY(-2px)',
                },
                transition: 'all 0.3s ease-in-out',
                px: 4,
                py: 2,
              }}
            >
              –î—ñ–∑–Ω–∞—Ç–∏—Å—è —Ç–æ—á–Ω—É —Ü—ñ–Ω—É
            </Button>
          </Box>
        </motion.div>
      </Container>
    </Box>
  );
};

export default Pricing;
